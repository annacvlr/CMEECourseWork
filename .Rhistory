wing.width.cm <- 1.2
wing.length.cm <- c(4.7, 5.2, 4.8)
wing.
wing.
wing.
wing.width.cm <- 1.2
wing.length.cm <- c(4.7, 5.2, 4.8)
wing
wing.
wing.x <- (1 + (2*3)
x <- (1 + (2*3))
li = list(c(1,2,3))
class(li)
li[[1]]
li[1]
li[[1]]
li[1]
v <- TRUE
v
class(v)
v <- 3.2
class(v)
v <- 2L
class(v)
v <- "string"
class (v)
b <- NA
class(b)
is.nas(b)
is.na(b)
b <- 0/0
b
is.na(b)
b <- 0/0
b
is.nan(b)
b <- 5/0
b
is.nan(b)
is.infinite(b)
is.finite(b)
is.finite(0/0)
as.integer(3.1)
as.numeric(4)
as.roman(155)
as.character(155)
as.logical(5)
as.logical(5)
as.logical(0)
as.logical(2)
as.logical(3)
as.logical(4)
as.logical(4)
as.logical(0)
1E4
1e4
5e-2
1E4^2
1/3/1e8
a <- 5
is.vector(a)
v1 <- c(0.02, 0.5, 1)
v2 <- c("a", "bc", "def","ghij")
v3 <- c(T, T, F)
v1;v2;v3
v1 <- c(0.02, T, 1)
v1
v1 <- c(0.02, "Mary", 1)
v1
v2 <- character(3)
v2
v3 v3 <- numeric(3)
v3 <- numeric(3)
v3
mat1 <- matrix(1:25,5,5)
mat1
print(mat1)
mat1<- matrix(1:25, 5, 5, byrow=TRUE)
mat1
dim(mat1)
arr1 <- array(1:50, c(5,5,2))
arr1[,,1]
print(arr1)
arr[,,2]
arr1[,,2]
arr1[,,2]
mat[1,1] <- "one"
mat1[1,1] <- "one"
mat1
MyList <- list(species=c("Quercus robur", "Fraxinus excelsior"), age=c(123,84))
MyList
MyList[[1]]
MyList[[1][1]]
MyList[[1][1]]
MyList[[1]]
MyList[[1][1]]
MyList[[1]][1]
MyList[[1]][1]
MyList$species
MyList[["species"]]
rr1 <- array(1:50, c(5,5,2))
arr1[,,1]
arr1[,,2]
MyList[[1]]
MyList[1]
MyList <- list(species=c("Quercus robur", "Fraxinus excelsior"), age=c(123,84))
MyList
MyList[[1]]
MyList[1]
MyList[[1]][1]
MyList[[1]]
MyList[1]
MyList[[1]][1]
MyList$species[1]
pop1 <- list (species="Cancer magister", 
            latitude=48.3, longitude=-123.1,
            startyr=1980, endyr=1985, 
            pop=c(303,402,101,607,802,35))
pop1
pop1<- list(lat=19, long=57,
            pop=c(100,101,99))
pop2<- list(lat=32, long=10,
            pop=c(1,4,7,7,2,1,2))
pop3<- list(lat=32, long=-10
            pop=c(12,11,2,1,14))
pops<- list(sp1=pop1, sp2=pop2, sp3=pop3)
pops
pop1<- list(lat=19, long=57,
            pop=c(100,101,99))
pop2<- list(lat=32, long=10,
            pop=c(1,4,7,7,2,1,2))
pop3<- list(lat=32, long=-10
            pop=c(12,11,2,1,14))
pops<- list(sp1=pop1, sp2=pop2, sp3=pop3)
pops
pop1<- list(lat=19, long=57,
            pop=c(100,101,99))
pop2<- list(lat=32, long=10,
            pop=c(1,4,7,7,2,1,2))
pop3<- list(lat=32, long=-10,
            pop=c(12,11,2,1,14))
pops<- list(sp1=pop1, sp2=pop2, sp3=pop3)
pops
pop1<- list(lat=19, long=57,
            pop=c(100,101,99))
pop2<- list(lat=56, long=-120,
            pop=c(1,4,7,7,2,1,2))
pop3<- list(lat=32, long=-10,
            pop=c(12,11,2,1,14))
pops<- list(sp1=pop1, sp2=pop2, sp3=pop3)
pops
pop$sp1
pops$sp1
pops$sp1["pop"]
pops$sp1
pops$sp1["pop"]
pops$sp1["pop"]
pops[[2]]$lat
pops[[3]]$pop[3]<-102
pops[[3]]$pops[3]<-102
pops[[3]]$pop[3]<-102
pops[[3]]$pop[3]<-102
pops
Col1 <-1:10
Col1
Col1
Col2 <- LETTERS[1:10]
Col2
Col3 <- runif(10)
Col3
Col3
MyDF<-data.frame(Col1,Col2,Col3)
MyDF
print(MyDF)
names(MyDF) <- c("My First Column", "My Second Column", "My Third Column")
MyDF
names(MyDF) <- c("MyFirstColumn", "MySecondColumn", "MyThirdColumn")
MyDF
MyDF$My Second Column
MyDF$MySecondColumn
colnames(MyDF)[2] <-" MySecond_Column"
MyDF
MyDF$MyThirdColumn
MyDF[,1]
MyDF[1,1]
MyDF[1,]
MyDF[1,]
MyDF[1,1]
MyDF[1,]
MyDF[c("MyFirstColumn","MyThirdColumn")]
class(MyDF)
str(MyDF)
head(MyDF)
tail(MyDF)
MyMat =matrix(1:8,4,4)
MyMat
MyDF=as.data.frame(MyMat)
MyDF
MyDF
object.size(MyMat)
object.size(MyDF)
latinssp= birds(,1:3)
birds = ( ('Passerculus sandwichensis','Savannah sparrow',18.7),
          ('Delichon urbica','House martin',19),
          ('Junco phaeonotus','Yellow-eyed junco',19.5),
          ('Junco hyemalis','Dark-eyed junco',19.6),
          ('Tachycineata bicolor','Tree swallow',20.2),
         )
)
birds = ( ('Passerculus sandwichensis','Savannah sparrow',18.7),
          ('Delichon urbica','House martin',19),
          ('Junco phaeonotus','Yellow-eyed junco',19.5),
          ('Junco hyemalis','Dark-eyed junco',19.6),
          ('Tachycineata bicolor','Tree swallow',20.2),
         )
q()
years <- 1990:2009
years
years <- 2009:1990
years
?seq
seq(1,10,0.5)
seq(from=1, to=10, by=0.5)
seq(from=1, by=0.5, to=10)
MyVar <- c('a','b','c','d','e')
MyVar[1]
MyVar[2]
MyVar[4]
MyVar[c(3,2,10)]
MyVar[c(3,2,1)]
MyVar[c(1,1,5,5)]
install.packages("jsonlite")
v <-
.libpaths()
libPaths()
.libPaths()v <-
.libPaths()
v <-c(0,1,2,3,4)
[200~installed.packages()
v <-c(0,1,2,3,4)installed.packages()
v <-c(0,1,2,3,4)installed.packages()
installed.packages()
v <-c(0,1,2,3,4)
v[3]

v <-c(0,1,2,3,4)
#^ create a vector
v[3]
v[1:3]
v[c91,4)]
v[c(1,4)]
v[-3]
v[-3]
v[c(1,4)]
mat1 <- matrix(1:25, 5, 5, byrow=T)
mat1
mat1[1,2]
mat1[1,2]
mat1[1,2:4]
mat1[1:2,2:4]
mat1[1]
mat1[,1]
mat1[1,]
mat1[,1]
a <- c(1,5)+2
a
a
x <- c(1,2); y <- c(5,3,9,2)
x;y
x + c(y,1)
#
x + c(y,1)
v <- c(0, 1, 2, 3, 4)
v2 <- v*2
v2
v*v2
t(v)
v%%t(v)
v%% t(v)
v %*% t(v)
v3 <- 1:7
v3
v4 <- c(v2, v3)
v4

species.name <- "Quercus robur" 
species.name
paste("Quercus", "robur")
paste("Quercus","robur", sep="")
paste("Quercus","robur", sep=" ")
paste("Quercus", "robur", sep= ",")
paste('Year is:', 1990:2000)

set.seed(1234567)
rnorm(1)
rnorm(10)
rnorm(11)
set.seed(1234567)
rnorm(11)
getwd()
MyData <- read.csv("../data/trees.csv")
MyData <- read.csv("week3/data/trees.csv")
ls(pattern = "My*")
class(MyData)
head(MyData)
str(MyData)
MyData <- read.csv("../data/trees.csv", header = F)
MyData <- read.csv("week3/data/trees.csv", header = F)
head(MyData)
MyData <- read.table("week3/data/trees.csv", sep = ',', header = TRUE)
head(MyData)
head(MyData)
MyData <- read.table("week3/data/trees.csv", skip = 5)
head(MyData)
write.csv(MyData, "week3/results/MyData.csv")
dir("week3/results/")
write.csv(MyData, "week3/results/MyData.csv")
dir("week3/results/")
write.table(MyData[1,], file = "week3/results/MyData.csv",append=TRUE)
write.csv(MyData, "week3/results/MyData.csv", row.names=TRUE)
write.table(MyData, "week3/results/MyData.csv", col.names=FALSE) # ignore col names
birds_species={}
for species, order, mass in taxa:
    taxa_dict[order].add(species, mass)
print(bords_species)
birds_species={}
for species, order, mass in taxa:
    taxa_dict[order].add(species, mass)
print(bords_species)
birds_species={}
for species, order, mass in taxa:
    taxa_dict[order].add(species, mass)
print(birds_species)

for latin_name, common_name, mass in birds
print ("latin name: ", latin_name, "common name: ", common_name, "bird mass: ", mass)

for latin_name, common_name, mass in birds:
print ("latin name: ", latin_name, "common name: ", common_name, "bird mass: ", mass)

for latin_name, common_name, mass in birds:
print ("latin name: ", latin_name, "common name: ", common_name, "bird mass: ", mass)

for latin_name, common_name, mass in birds:
    print ("latin name: ", latin_name, "common name: ", common_name, "bird mass: ", mass)
birds = ( ('Passerculus sandwichensis','Savannah sparrow',18.7),
          ('Delichon urbica','House martin',19),
          ('Junco phaeonotus','Yellow-eyed junco',19.5),
          ('Junco hyemalis','Dark-eyed junco',19.6),
          ('Tachycineata bicolor','Tree swallow',20.2),
        )

# Birds is a tuple of tuples of length three: latin name, common name, mass.
# write a (short) script to print these on a separate line or output block by
# species 
# 
# A nice example output is:
# 
# Latin name: Passerculus sandwichensis Common name: Savannah sparrow Mass: 18.7
# ... etc.

for latin_name, common_name, mass in birds:
    print ("latin name: ", latin_name, "common name: ", common_name, "bird mass: ", mass)
birds = ( ('Passerculus sandwichensis','Savannah sparrow',18.7),
          ('Delichon urbica','House martin',19),
          ('Junco phaeonotus','Yellow-eyed junco',19.5),
          ('Junco hyemalis','Dark-eyed junco',19.6),
          ('Tachycineata bicolor','Tree swallow',20.2),
        )
q()
